import { micromark } from "micromark";
import DOMPurify from "dompurify";
import { useEffect, useState } from "react";

function PostTeaser() {
  const [posts, setPosts] = useState([]);
  const [postList, setPostList] = useState([]);

  useEffect(() => {
    async function fetchData() {
      const list = await getPostList();
      setPostList(list);
      const fetchedPosts = await getPosts(list);
      setPosts(fetchedPosts);
    }

    fetchData();
  }, []);


  // returns a component that is generated by the renderTeaser function
  return (
    <div className="teaser">
      {renderTeasers(postList, posts)}
    </div>
  )
}

function renderTeasers(postList, posts) {
  console.log(postList);
  return postList.map((post, index) => ( // issue: if one file doesn't load then entire order is messed up ---- postList.posts.slice().reverse().map()
      <div className="teaser-bkg" key={post.id}>
        <div className="teaser-l">
          <div className="teaser-header">{post.title}</div>
          <div className="teaser-text" dangerouslySetInnerHTML={{__html: DOMPurify.sanitize(micromark(posts[index]))}}></div>
          <div className="teaser-read-more">read more</div>
          <div className="teaser-featured-tag">{ index === 0 ? "Featured article" : "" }</div>
          <div className="teaser-date">{post.date}</div>
        </div>
        <div className="teaser-r">
          <img className="teaser-img" src={post.img} alt={post.alt}></img>
        </div>
      </div>
  ));
}

// need this for info to style teaser boxes :)
async function getPostList() {
  const postListPath = '/blog/posts/postlist.json';
  let postListJson = [];

  try {
    const response = await fetch(postListPath);
    postListJson = await response.json();

    return postListJson.posts.map((post) => ({
      id: post.id,
      title: post.title,
      fileName: post.fileName,
      date: post.date,
      img: post.img,
      alt: post.alt
      }));
  } catch (e) {
    console.error("Uh oh! " + e);
    return [];
  }
}

async function getPosts(postList) {
  const postsDir = "/blog/posts";
  const fetchPromises = postList.map(async (post) => {
    const response = await fetch(`${postsDir}/${post.fileName}`);
    if (response.ok) {
      return response.text();
    }
    return null;
  })

  const tempPosts = await Promise.all(fetchPromises);
  return tempPosts.filter((content) => content !== null);
}

export default PostTeaser;